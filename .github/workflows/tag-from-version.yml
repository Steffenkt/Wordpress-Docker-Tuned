name: Tag from VERSION file

on:
  push:
    branches:
      - main
  workflow_dispatch:  # 👉 ermöglicht manuelles Starten über GitHub

jobs:
  create-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # holt alle Tags

      - name: Read and validate version from file
        id: version
        run: |
          VERSION=$(cat VERSION | tr -d '[:space:]')
          
          # Validierungsregel: muss X.Y.Z sein (z. B. 6.7.2)
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Ungültiges Versionsformat in /VERSION: $VERSION"
            echo "Version muss im Format X.Y.Z sein (z. B. 6.7.2)"
            exit 1
          fi

          echo "✅ Gefundene Version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG=v${{ steps.version.outputs.version }}
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "✅ Tag $TAG existiert bereits und wird aktualisiert"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "ℹ️ Tag $TAG existiert noch nicht und wird neu erstellt"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete existing tag if it exactly matches current version
        if: steps.check_tag.outputs.exists == 'true'
        run: |
          CURRENT_TAG="v${{ steps.version.outputs.version }}"
          
          # Nur den exakt passenden Tag aktualisieren
          echo "🔄 Aktualisiere Tag $CURRENT_TAG für aktuelle Version ${{ steps.version.outputs.version }}"
          git tag -d $CURRENT_TAG
          git push --delete origin $CURRENT_TAG
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create or update tag from VERSION
        run: |
          # Tag erstellen
          git tag v${{ steps.version.outputs.version }}
          
          # Nur den aktualisierten Tag pushen
          git push origin v${{ steps.version.outputs.version }}
          echo "✅ Tag v${{ steps.version.outputs.version }} wurde erstellt/aktualisiert"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
